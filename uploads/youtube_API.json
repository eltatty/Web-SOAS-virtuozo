{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Youtube API",
    "description": "The YouTube Data API lets you incorporate functions normally executed on the YouTube website into your own website or application.",
    "termsOfService": "https://developer.google.com/books/terms.html",
    "license": {
      "name": "Apache 2.0",
      "url": "https://creativecommons.org/licenses/by/4.0"
    }
  },
  "externalDocs": {
    "description": "Find more info here",
    "url": "https://developers.google.com/youtube/v3/docs"
  },
  "servers": [
    {
      "url": "https://www.googleapis.com/youtube/v3"
    }
  ],
  "paths": {
    "/comments": {
      "post": {
        "summary": "Creates a reply to an existing comment.",
        "parameters": [
          {
            "$ref": "#/components/parameters/partParam"
          }
        ],
        "requestBody": {
          "description": "Provide a comment resource in the request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If successful, this method returns a comment resource in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Modifies a comment.",
        "parameters": [
          {
            "$ref": "#/components/parameters/partParam"
          }
        ],
        "requestBody": {
          "description": "Provide a comment resource in the request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If successful, this method returns a comment resource in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions": {
      "post": {
        "summary": "Adds a subscription for the authenticated user's channel.",
        "parameters": [
          {
            "$ref": "#/components/parameters/partParam"
          }
        ],
        "requestBody": {
          "description": "Provide a subscription resource in the request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If successful, this method returns a subscription resource in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "partParam": {
        "name": "part",
        "description": "The part parameter identifies the properties that the API response will include.",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "id",
            "snippet"
          ]
        }
      }
    },
    "schemas": {
      "Subscription": {
        "type": "object",
        "properties": {
          "kind": {
            "description": "Identifies the API resource's type. The value will be youtube#subscription.",
            "type": "string"
          },
          "etag": {
            "description": "The Etag of this resource.",
            "type": "string"
          },
          "id": {
            "description": "The ID that YouTube uses to uniquely identify the subscription.",
            "type": "string"
          },
          "snippet": {
            "description": "The snippet object contains basic details about the subscription, including its title and the channel that the user subscribed to.",
            "type": "object",
            "properties": {
              "publishedAt": {
                "description": "The date and time when the comment was orignally published.",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "Comment": {
        "x-kindOf": "https://schema.org/comment",
        "type": "object",
        "properties": {
          "kind": {
            "description": "Identifies the API resource's type. The value will be youtube#comment.",
            "type": "string"
          },
          "id": {
            "description": "The ID that YouTube uses to uniquely identify the comment.",
            "type": "string"
          },
          "snippet": {
            "type": "object",
            "description": "The snippet object contains basic details about the comment.",
            "properties": {
              "authorDisplayName": {
                "description": "The display name of the user who posted the comment.",
                "type": "string"
              },
              "authorProfileImageUrl": {
                "description": "The URL for the avatar of the user who posted the comment.",
                "type": "string"
              },
              "authorChannelUrl": {
                "description": "The URL of the comment author's YouTube channel, if available.",
                "type": "string"
              },
              "authorChannelId": {
                "description": "This object encapsulates information about the comment author's YouTube channel, if available.",
                "type": "object",
                "properties": {
                  "value": {
                    "description": "The ID of the comment author's YouTube channel, if available.",
                    "type": "string"
                  }
                }
              },
              "channelId": {
                "description": "The ID of the YouTube channel associated with the comment.",
                "type": "string"
              },
              "videoId": {
                "description": "The ID of the video that the comment refers to.",
                "type": "string"
              },
              "textDisplay": {
                "description": "The comment's text. The text can be retrieved in either plain text or HTML.",
                "type": "string"
              },
              "textOriginal": {
                "description": "The original, raw text of the comment as it was initially posted or last updated.",
                "type": "string"
              },
              "parentId": {
                "description": "The unique ID of the parent comment.",
                "type": "string"
              },
              "canRate": {
                "description": "This setting indicates whether the current viewer can rate the comment.",
                "type": "string"
              },
              "viewerRating": {
                "description": "The rating the viewer has given to this comment.",
                "type": "string",
                "enum": [
                  "like",
                  "none"
                ]
              },
              "likeCount": {
                "description": "The total number of likes (positive ratings) the comment has received.",
                "type": "integer"
              },
              "moderationStatus": {
                "description": "The comment's moderation status.",
                "type": "string",
                "enum": [
                  "heldForView",
                  "likelySpam",
                  "published",
                  "rejected"
                ]
              },
              "publishedAt": {
                "description": "The date and time when the comment was orignally published.",
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "description": "The date and time when the comment was orignally published.",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  }
}